name: Build and Push Docker Image

on:
  push:
    branches:
      - production  # Trigger on push to the main branch2

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up JDK for building the project
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Grant execute permission to Maven Wrapper

      # Clean up old JAR files (optional step)
      # Clean up old JAR files (optional step)


      # Build the  Test unitaire
      - name: Build the  Test unitaire
        run: mvn  test

      # Build the Spring Boot application
      - name: Build Spring Boot JAR
        run:  mvn clean  install -DskipTests

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

        # Étape 3 : Construire tous les services définis dans docker-compose.yml
      - name: Build Docker Compose services
        run: docker compose build

      # Push Docker image to Docker Hub
      - name: Tag and Push Docker Images
        run: |
          docker tag pfamicros-config-service ${{ secrets.DOCKER_USERNAME }}/config-service
          

          docker push ${{ secrets.DOCKER_USERNAME }}/config-service
          
      
      

      # Upload Artifact for deployment job (using v4)
      - name: Upload Artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: springboot-example
          path: ${{ github.workspace }}/target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Download Artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: springboot-example
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: springbootdemo
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}
          package: '*.jar'